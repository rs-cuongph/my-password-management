{"version":3,"file":"TanStackRouterDevtoolsPanelCore.js","sources":["../../src/TanStackRouterDevtoolsPanelCore.tsx"],"sourcesContent":["import { render } from 'solid-js/web'\nimport { createSignal, lazy } from 'solid-js'\nimport { DevtoolsOnCloseContext, ShadowDomTargetContext } from './context'\nimport type { JSX } from 'solid-js'\nimport type { AnyRouter } from '@tanstack/router-core'\n\ninterface TanStackRouterDevtoolsPanelCoreOptions {\n  /**\n   * The standard React style object used to style a component with inline styles\n   */\n  style?: JSX.CSSProperties\n  /**\n   * The standard React class property used to style a component with classes\n   */\n  className?: string\n  /**\n   * A boolean variable indicating whether the panel is open or closed\n   */\n  isOpen?: boolean\n  /**\n   * A function that toggles the open and close state of the panel\n   */\n  setIsOpen?: (isOpen: boolean) => void\n  /**\n   * Handles the opening and closing the devtools panel\n   */\n  handleDragStart?: (e: any) => void\n  /**\n   * A boolean variable indicating if the \"lite\" version of the library is being used\n   */\n  router: AnyRouter\n\n  routerState: any\n  /**\n   * Use this to attach the devtool's styles to specific element in the DOM.\n   */\n  shadowDOMTarget?: ShadowRoot\n}\n\nclass TanStackRouterDevtoolsPanelCore {\n  #router: any\n  #routerState: any\n  #style: any\n  #className: any\n  #shadowDOMTarget?: ShadowRoot\n  #isMounted = false\n  #setIsOpen?: (isOpen: boolean) => void\n  #dispose?: () => void\n  #Component: any\n\n  constructor(config: TanStackRouterDevtoolsPanelCoreOptions) {\n    const {\n      router,\n      routerState,\n      shadowDOMTarget,\n      setIsOpen,\n      style,\n      className,\n    } = config\n\n    this.#router = createSignal(router)\n    this.#routerState = createSignal(routerState)\n    this.#style = createSignal(style)\n    this.#className = createSignal(className)\n    this.#shadowDOMTarget = shadowDOMTarget\n    this.#setIsOpen = setIsOpen\n  }\n\n  mount<T extends HTMLElement>(el: T) {\n    if (this.#isMounted) {\n      throw new Error('Devtools is already mounted')\n    }\n\n    const dispose = render(() => {\n      const [router] = this.#router\n      const [routerState] = this.#routerState\n      const [style] = this.#style\n      const [className] = this.#className\n      const shadowDOMTarget = this.#shadowDOMTarget\n      const setIsOpen = this.#setIsOpen\n\n      let BaseTanStackRouterDevtoolsPanel\n\n      if (this.#Component) {\n        BaseTanStackRouterDevtoolsPanel = this.#Component\n      } else {\n        BaseTanStackRouterDevtoolsPanel = lazy(\n          () => import('./BaseTanStackRouterDevtoolsPanel'),\n        )\n        this.#Component = BaseTanStackRouterDevtoolsPanel\n      }\n\n      return (\n        <ShadowDomTargetContext.Provider value={shadowDOMTarget}>\n          <DevtoolsOnCloseContext.Provider\n            value={{\n              onCloseClick: () => {},\n            }}\n          >\n            <BaseTanStackRouterDevtoolsPanel\n              router={router}\n              routerState={routerState}\n              shadowDOMTarget={shadowDOMTarget}\n              setIsOpen={setIsOpen}\n              style={style}\n              className={className}\n            />\n          </DevtoolsOnCloseContext.Provider>\n        </ShadowDomTargetContext.Provider>\n      )\n    }, el)\n\n    this.#isMounted = true\n    this.#dispose = dispose\n  }\n\n  unmount() {\n    if (!this.#isMounted) {\n      throw new Error('Devtools is not mounted')\n    }\n    this.#dispose?.()\n    this.#isMounted = false\n  }\n\n  setRouter(router: AnyRouter) {\n    this.#router[1](router)\n  }\n\n  setRouterState(routerState: any) {\n    this.#routerState[1](routerState)\n  }\n\n  setStyle(style: any) {\n    this.#style[1](style)\n  }\n\n  setClassName(className: any) {\n    this.#className[1](className)\n  }\n\n  setOptions(options: Partial<TanStackRouterDevtoolsPanelCoreOptions>) {\n    if (options.shadowDOMTarget !== undefined) {\n      this.#shadowDOMTarget = options.shadowDOMTarget\n    }\n    if (options.router !== undefined) {\n      this.setRouter(options.router)\n    }\n    if (options.routerState !== undefined) {\n      this.setRouterState(options.routerState)\n    }\n\n    if (options.style !== undefined) {\n      this.setStyle(options.style)\n    }\n\n    if (options.className !== undefined) {\n      this.setClassName(options.className)\n    }\n  }\n}\n\nexport { TanStackRouterDevtoolsPanelCore }\n"],"names":["TanStackRouterDevtoolsPanelCore","constructor","config","router","routerState","shadowDOMTarget","setIsOpen","style","className","createSignal","mount","el","Error","dispose","render","BaseTanStackRouterDevtoolsPanel","lazy","_$createComponent","ShadowDomTargetContext","Provider","value","children","DevtoolsOnCloseContext","onCloseClick","unmount","setRouter","setRouterState","setStyle","setClassName","setOptions","options","undefined"],"mappings":"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"}