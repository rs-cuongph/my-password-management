import React, { useState } from 'react';
import type { RecoveryCode } from '../types/recovery';

interface RecoveryCodeDisplayProps {
  recoveryCode: RecoveryCode;
  onClose: () => void;
  onGenerate?: () => void;
}

export const RecoveryCodeDisplay: React.FC<RecoveryCodeDisplayProps> = ({
  recoveryCode,
  onClose,
  onGenerate,
}) => {
  const [copied, setCopied] = useState(false);
  const [acknowledged, setAcknowledged] = useState(false);

  const handleCopy = async () => {
    try {
      await navigator.clipboard.writeText(recoveryCode.code);
      setCopied(true);
      setTimeout(() => setCopied(false), 2000);
    } catch (error) {
      // Fallback for browsers that don't support clipboard API
      console.error('Failed to copy to clipboard:', error);
    }
  };

  const handleDownload = () => {
    const content = `# Vault Recovery Code

Generated: ${new Date(recoveryCode.createdAt).toLocaleString()}
Version: ${recoveryCode.version}

## Recovery Code
${recoveryCode.code}

## Important Instructions
${recoveryCode.instructions.map((instruction, index) => `${index + 1}. ${instruction}`).join('\n')}

## Security Notes
- Store this file in a secure location separate from your master password
- This code can access your vault without the master password
- If this code is compromised, generate a new one immediately
- Consider printing this and storing it offline

---
Generated by My Password Management - Secure Password Manager
`;

    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `vault-recovery-code-${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
        <div className="p-6">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-2xl font-bold text-gray-900 flex items-center">
              üõ°Ô∏è Recovery Code Generated
            </h2>
            <button
              onClick={onClose}
              className="text-gray-400 hover:text-gray-600"
            >
              <svg
                className="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth={2}
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            </button>
          </div>

          {/* Warning Banner */}
          <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
            <div className="flex">
              <div className="flex-shrink-0">
                <svg
                  className="h-5 w-5 text-red-400"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fillRule="evenodd"
                    d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z"
                    clipRule="evenodd"
                  />
                </svg>
              </div>
              <div className="ml-3">
                <h3 className="text-sm font-medium text-red-800">
                  Critical Security Information
                </h3>
                <div className="mt-2 text-sm text-red-700">
                  <p>
                    This recovery code can access your vault without your master
                    password. Store it securely!
                  </p>
                </div>
              </div>
            </div>
          </div>

          {/* Recovery Code Display */}
          <div className="bg-gray-50 rounded-lg p-6 mb-6">
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Your Recovery Code
            </label>
            <div className="flex items-center space-x-3">
              <div className="bg-white border-2 border-gray-300 rounded-lg px-4 py-3 font-mono text-lg text-center tracking-wider flex-1">
                {recoveryCode.code}
              </div>
              <button
                onClick={handleCopy}
                className={`px-4 py-3 rounded-lg font-medium transition-colors ${
                  copied
                    ? 'bg-green-100 text-green-800 border border-green-200'
                    : 'bg-blue-600 text-white hover:bg-blue-700'
                }`}
              >
                {copied ? '‚úì Copied' : 'Copy'}
              </button>
            </div>
            <p className="text-xs text-gray-500 mt-2">
              Generated: {new Date(recoveryCode.createdAt).toLocaleString()} |
              Version: {recoveryCode.version}
            </p>
          </div>

          {/* Instructions */}
          <div className="mb-6">
            <h3 className="text-lg font-medium text-gray-900 mb-3">
              üìã Important Instructions
            </h3>
            <div className="space-y-2">
              {recoveryCode.instructions.map((instruction, index) => (
                <div key={index} className="flex items-start space-x-3">
                  <span className="flex-shrink-0 w-6 h-6 bg-blue-100 text-blue-800 rounded-full flex items-center justify-center text-sm font-medium">
                    {index + 1}
                  </span>
                  <p className="text-gray-700">{instruction}</p>
                </div>
              ))}
            </div>
          </div>

          {/* Storage Options */}
          <div className="bg-blue-50 rounded-lg p-4 mb-6">
            <h4 className="text-md font-medium text-blue-900 mb-3">
              üíæ Secure Storage Options
            </h4>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
              <div className="flex items-center space-x-2">
                <svg
                  className="w-5 h-5 text-blue-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                  />
                </svg>
                <span className="text-blue-800">Print and store offline</span>
              </div>
              <div className="flex items-center space-x-2">
                <svg
                  className="w-5 h-5 text-blue-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"
                  />
                </svg>
                <span className="text-blue-800">
                  Password manager (separate)
                </span>
              </div>
              <div className="flex items-center space-x-2">
                <svg
                  className="w-5 h-5 text-blue-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"
                  />
                </svg>
                <button
                  onClick={handleDownload}
                  className="text-blue-800 hover:text-blue-900 underline"
                >
                  Download as text file
                </button>
              </div>
              <div className="flex items-center space-x-2">
                <svg
                  className="w-5 h-5 text-blue-600"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4"
                  />
                </svg>
                <span className="text-blue-800">Secure cloud storage</span>
              </div>
            </div>
          </div>

          {/* Acknowledgment Checkbox */}
          <div className="mb-6">
            <label className="flex items-start space-x-3">
              <input
                type="checkbox"
                checked={acknowledged}
                onChange={(e) => setAcknowledged(e.target.checked)}
                className="mt-1 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
              />
              <span className="text-sm text-gray-700">
                I understand that I need to store this recovery code securely
                and that it can be used to access my vault without my master
                password. I acknowledge that losing this code may make vault
                recovery impossible if I forget my master password.
              </span>
            </label>
          </div>

          {/* Action Buttons */}
          <div className="flex flex-col sm:flex-row gap-3">
            <button
              onClick={onClose}
              disabled={!acknowledged}
              className={`flex-1 px-6 py-3 rounded-lg font-medium transition-colors ${
                acknowledged
                  ? 'bg-green-600 text-white hover:bg-green-700'
                  : 'bg-gray-300 text-gray-500 cursor-not-allowed'
              }`}
            >
              ‚úì I've Saved My Recovery Code
            </button>
            {onGenerate && (
              <button
                onClick={onGenerate}
                className="flex-1 px-6 py-3 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 transition-colors"
              >
                Generate New Code
              </button>
            )}
          </div>

          {/* Additional Warning */}
          <div className="mt-4 text-xs text-gray-500 text-center">
            ‚ö†Ô∏è This dialog will not be shown again. Make sure you have securely
            stored your recovery code before closing.
          </div>
        </div>
      </div>
    </div>
  );
};
